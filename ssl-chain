#!/bin/bash

# Disable "exit immediatly"
set +e

# Overwrite sub command usage
usage() {
  echo -n "Usage: $ $(basename $0) chain [HOST] <PORT>

 Attempt to fix certificate chain of given certficate.

 Options:
  -i, --input       Specify input file

"
}

# Read the options and set stuff
while [[ $1 = -?* ]]; do
  case $1 in
    -h|--help) usage >&2; safe_exit ;;
    -i|--input) input_file=true ;;
    *)
      die "invalid option: $1"
      ;;
  esac
  shift
done

# Argument string to array
IFS=', ' read -a argsArray <<< "$*"

# Redeclare path variable
path=${path:?}

###
# Logic below
###

tmpFile=$(mktemp /tmp/sslchain-XXXXX)
inputFile=${tmpFile}

# Write current clipboard to tempfile
pbpaste > ${inputFile}

# Check for --input requirements
if [[ $input_file && -z ${argsArray[0]} ]]; then
  err "Missing --input value"
  safe_exit
else

  if [[ ! -f ${argsArray[0]} ]]; then
    err "Couldn't find input file \"${argsArray[0]}\""
    safe_exit
  else
    inputFile=${argsArray[0]}
  fi
fi

# Get the first line
firstline=$(head -1 ${inputFile})

# Check clipboard for CSR
if [[ ! $input_file && ! ${firstline} =~ .*BEGIN\ CERTIFICATE.* ]]; then
	# Clipboard doesn't contain CSR --> create dummy!
	cat > ${tmpFile} << EOHELP
-----BEGIN CERTIFICATE-----
Remove these lines and replace them with the actual certificate.
-----END CERTIFICATE-----
EOHELP
	# Let the user replace the dummy with the actual certificate
	$EDITOR ${tmpFile}
fi

# Store it
openssl asn1parse -in ${inputFile} > ${inputFile}.validated 2>/dev/null

# Get the first line
firstline=$(head -1 ${inputFile}.validated)

# Check for proper decode result
if [[ ${firstline} =~ .*rror.* || -z ${firstline} ]]; then
	err "Couldn't decode CRT, check your clipboard :("
	exit 1
fi

# Fix chain
${path}/lib/cert-chain-resolver.sh -i -o ${inputFile}.fixed ${inputFile} &>/dev/null
fixedCrt=$(cat ${inputFile}.fixed)

# Remove temporary files
rm ${inputFile}.* ${tmpFile}

success "Successfuly fixed intermediate chain:"
out "${fixedCrt}"

# This has to be run last not to rollback changes we've made.
safe_exit
